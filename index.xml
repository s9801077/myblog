<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Puck&#39;s Blog</title><link>https://blog.puckwang.com/</link><description>Recent content on Puck&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2017-2020, Puck Wang; all rights reserved.</copyright><lastBuildDate>Mon, 19 Apr 2021 03:34:36 +0800</lastBuildDate><atom:link href="https://blog.puckwang.com/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Git Bisect 快速找到第一個有問題的 Commit</title><link>https://blog.puckwang.com/post/2021/use-git-bisect-debug/</link><pubDate>Mon, 19 Apr 2021 03:34:36 +0800</pubDate><guid>https://blog.puckwang.com/post/2021/use-git-bisect-debug/</guid><description>&lt;div class=&#34;image&#34;&gt;
&lt;figure class=&#34;figure&#34;&gt;
&lt;img src=&#39;https://blog.puckwang.com/images/2021/git-log.png&#39; class=&#34;figure-img img-fluid rounded&#34;
alt=&#34;Git log&#34;
width=&#34;600&#34;
&gt;
&lt;figcaption class=&#34;figure-caption text-center&#34;&gt;Git log&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;現在專案很常使用 Git 作為版本控制系統，所以在遇到 Bug 找不到是哪裡出錯時，可以藉由找出第一次出錯的 Commit 來找到問題原因。&lt;/p&gt;
&lt;p&gt;但在大型專案中，全部 Commit 可能達上千筆，如果遇到很久沒發現的 Bug，就可能會發比較久的時間去找是哪個 Commit 出問題。&lt;/p&gt;
&lt;p&gt;常見的可能會看 Commit 訊息來反推可能有問題的 Commit，或是用最笨的方法一個個往回找，這樣效率都不太好。&lt;/p&gt;
&lt;p&gt;利用 Git 內建的 &lt;strong&gt;Git Bisect&lt;/strong&gt; 來使用二元搜尋的方式來找有問題的 Commit，就可以大大提升效率。&lt;/p&gt;</description></item><item><title>Jenkins Pipeline Stages 平行處理的寫法</title><link>https://blog.puckwang.com/post/2021/jenkins-pipeline-running-stages-in-parallel/</link><pubDate>Sat, 13 Mar 2021 11:47:08 +0800</pubDate><guid>https://blog.puckwang.com/post/2021/jenkins-pipeline-running-stages-in-parallel/</guid><description>&lt;div class=&#34;image&#34;&gt;
&lt;figure class=&#34;figure&#34;&gt;
&lt;img src=&#39;https://blog.puckwang.com/images/2021/Jenkins-Pipeline-Parallel.png&#39; class=&#34;figure-img img-fluid rounded&#34;
alt=&#34;Jenkins Pipeline Parallel Example&#34;
&gt;
&lt;figcaption class=&#34;figure-caption text-center&#34;&gt;Jenkins Pipeline Parallel Example&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;Jenkins Pipeline 在執行 Stage 時，某些情況使用平行處理可以節省很多執行所需時間，本文將會介紹幾種平行處理的方法。&lt;/p&gt;
&lt;p&gt;你可以在官方文件中看到 &lt;a href=&#34;https://www.jenkins.io/doc/book/pipeline/syntax/#parallel&#34; target=&#34;_blank&#34;&gt;Parallel&lt;/a&gt; 及 &lt;a href=&#34;https://www.jenkins.io/doc/book/pipeline/syntax/#declarative-matrix&#34; target=&#34;_blank&#34;&gt;Matrix&lt;/a&gt; 兩種實現平行處理的方法，而我除了這兩個外還會在多介紹一個利用 &lt;code&gt;Parallel&lt;/code&gt; 去實現動態 Stage 的方法，這也是很常在網路上看到的問題，可以更靈活地去運用 Parallel。&lt;/p&gt;</description></item><item><title>Don&#39;t Make Me Think：如何設計好網站 - 讀後筆記</title><link>https://blog.puckwang.com/post/2021/dont-make-me-think-%E8%AE%80%E5%BE%8C%E7%AD%86%E8%A8%98/</link><pubDate>Mon, 22 Feb 2021 18:08:07 +0800</pubDate><guid>https://blog.puckwang.com/post/2021/dont-make-me-think-%E8%AE%80%E5%BE%8C%E7%AD%86%E8%A8%98/</guid><description>&lt;div class=&#34;image&#34;&gt;
&lt;figure class=&#34;figure&#34;&gt;
&lt;img src=&#39;https://blog.puckwang.com/images/2021/DMMT-cover.png&#39; class=&#34;figure-img img-fluid rounded&#34;
alt=&#34;Don&amp;#39;t Make Me Think 第三版封面&#34;
&gt;
&lt;figcaption class=&#34;figure-caption text-center&#34;&gt;Don&amp;#39;t Make Me Think 第三版封面&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;近年一直想提升我的 UI / UX 技能，至少到用起來不會不適，而有人向我推薦這本入門的書，稍微查了一下目錄後，看起來內容滿不錯。也剛好遇到過年假期，就想說把它看完順便寫成重點筆記。&lt;/p&gt;
&lt;p&gt;原本是想在網路買二手，但發現市立圖書館剛好有這本書 (第二版)，所以就改去圖書館借了，而上次到圖書館借書是五年前了。&lt;/p&gt;</description></item><item><title>Bind Shell 與 Reverse Shell</title><link>https://blog.puckwang.com/post/2021/bind_shell_and-reverse_shell_with_netcat/</link><pubDate>Sun, 10 Jan 2021 21:00:59 +0800</pubDate><guid>https://blog.puckwang.com/post/2021/bind_shell_and-reverse_shell_with_netcat/</guid><description>&lt;p&gt;Bind Shell 與 Reverse Shell 是兩種常見的遠端執行指令的技術，讓攻擊者可以向目標主機發送並執行指令，常與檔案上傳漏洞 (File Upload Vulnerabilities) 搭配使用。&lt;/p&gt;
&lt;p&gt;這是我在研究檔案上傳漏洞時發現的一個有趣的攻擊手法，所以把它記錄下來，但也沒有太深入去專研，所以讀完本文不會讓你精通，只會讓你簡單了解並知道如何使用。&lt;/p&gt;
&lt;p&gt;本文將使用 Netcat 來 Demo。&lt;/p&gt;</description></item><item><title>.Net Core 使用 FluentMigrator 遷移資料庫</title><link>https://blog.puckwang.com/post/2020/dotcore-use-fluentmigrator/</link><pubDate>Tue, 30 Jun 2020 17:59:32 +0800</pubDate><guid>https://blog.puckwang.com/post/2020/dotcore-use-fluentmigrator/</guid><description>&lt;p&gt;Fluent Migrator 是一個 &lt;code&gt;.Net&lt;/code&gt; 的資料庫遷移 (Migration) 框架套件，其他如 &lt;code&gt;Laravel&lt;/code&gt; 及 &lt;code&gt;Ruby on Rails&lt;/code&gt; 也有類似的套件。遷移就像是資料庫的版本控制一樣，提供 &lt;code&gt;Code-First&lt;/code&gt; 的方式去管理資料庫結構，並可將其納入專案的版控中。&lt;/p&gt;</description></item><item><title>Git 進階應用 Submodule 與 Subtree，使用它們來拆分專案</title><link>https://blog.puckwang.com/post/2020/git-submodule-vs-subtree/</link><pubDate>Wed, 18 Mar 2020 21:29:12 +0800</pubDate><guid>https://blog.puckwang.com/post/2020/git-submodule-vs-subtree/</guid><description>&lt;p&gt;在開發過程中，專案隨著時間變得越來越肥，不時還生出子專案，此時就會遇到需要各專案共用一些 Code 的部分，如果共用的部分是用 &lt;code&gt;複製貼上&lt;/code&gt; 的方式去同步，那勢必一定會造成兩邊不同步，維護困難。&lt;/p&gt;
&lt;p&gt;本篇文將分享 Git Submodule 與 Git Subtree 的差異及它們的使用方法。&lt;/p&gt;</description></item><item><title>使用 Github Actions 來自動化部署 Hugo 到 Github Pages</title><link>https://blog.puckwang.com/post/2020/use-github-actions-deploy-hugo/</link><pubDate>Sat, 14 Mar 2020 21:22:30 +0800</pubDate><guid>https://blog.puckwang.com/post/2020/use-github-actions-deploy-hugo/</guid><description>&lt;div class=&#34;mermaid&#34; style=&#34;margin: 2rem 0&#34;&gt;
graph LR;
A[Self] --&gt;|Commit| B
B[Github] --&gt; C
C[Github Actions] --&gt;|Build/Deploy| D
D[Github Pages]
&lt;/div&gt;
&lt;p&gt;本文說明如何利用 Github Actions 在將 Commit 推上 Github 後，自動化執行 Hugo 建置並部署結果到 Github Pages。&lt;/p&gt;</description></item><item><title>2020 JetBrains Quest 官方解謎全記錄</title><link>https://blog.puckwang.com/post/2020/2020_jetbrains_quest_log/</link><pubDate>Mon, 09 Mar 2020 23:23:00 +0800</pubDate><guid>https://blog.puckwang.com/post/2020/2020_jetbrains_quest_log/</guid><description>&lt;p&gt;就在台灣時間 2020/3/9 20:04，JetBrains 的官方 Twitter 發了一篇推文如下&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;fr&#34; dir=&#34;ltr&#34;&gt;JetBrains Quest begins… &lt;a href=&#34;https://twitter.com/hashtag/JetBrainsQuest?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#JetBrainsQuest&lt;/a&gt;&lt;br&gt;48 61 76 65 20 79 6f 75 20 73 65 65 6e 20 74 68 65 20 73 6f 75 72 63 65 20 63 6f 64 65 20 6f 66 20 74 68 65 20 4a 65 74 42 72 61 69 6e 73 20 77 65 62 73 69 74 65 3f&lt;/p&gt;&amp;mdash; JetBrains (@jetbrains) &lt;a href=&#34;https://twitter.com/jetbrains/status/1236986174075482113?ref_src=twsrc%5Etfw&#34;&gt;March 9, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;而我看到這個，就馬上燃起我的解謎魂了！也就打一篇解題的過程來紀錄一下。&lt;/p&gt;
&lt;p&gt;接下來我將一步一步的紀錄我的解題步驟，不過當看到這篇文章時應該已經過了活動期限囉！畢竟不能破人家的梗！&lt;/p&gt;</description></item><item><title>GSC 黏土人攝影集</title><link>https://blog.puckwang.com/photography/gsc_q_doll_photos/</link><pubDate>Sat, 08 Jun 2019 02:54:48 +0800</pubDate><guid>https://blog.puckwang.com/photography/gsc_q_doll_photos/</guid><description>&lt;div class=&#34;image&#34;&gt;
&lt;figure class=&#34;figure&#34;&gt;
&lt;img src=&#39;https://blog.puckwang.com/images/others/GSC_Q_Doll_Banner.JPG&#39; class=&#34;figure-img img-fluid rounded&#34;
&gt;
&lt;/figure&gt;
&lt;/div&gt;
&lt;p&gt;這裡放了我拍攝的所有收藏的 GSC 黏土人的相簿，純非專業人士及非專業器材拍攝出來的，歡迎留言指教。&lt;/p&gt;
&lt;p&gt;目前照片會放在 Google 相簿，未來再視需求更換。&lt;/p&gt;</description></item><item><title>使用 vuex-map-fields 讓 Vuex state 也可使用 v-model 綁定</title><link>https://blog.puckwang.com/post/2019/vue_vuex_form_handling_solution/</link><pubDate>Thu, 16 May 2019 21:17:40 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/vue_vuex_form_handling_solution/</guid><description>&lt;p&gt;有在用 Vue 寫應用程式的人，一定也會接觸到 Vuex，它有很多優點但也有限制，
其中一項就是不能在 Mutation 以外的地方修改 State ，所以也就不能直接使用
v-model 去綁定，雖然官方有提供一段替代的寫法，但還是比原本直接用 v-model
來的麻煩很多，特別是大量的時候。&lt;/p&gt;</description></item><item><title>Debian 安裝與配置 Supervisor</title><link>https://blog.puckwang.com/post/2019/debian_supervisor/</link><pubDate>Wed, 08 May 2019 11:44:21 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/debian_supervisor/</guid><description>&lt;p&gt;最近為了讓在伺服器上的 Laravel Queue Worker 更方便去管理，不用每次重啟伺服器都要上去重新執行，
所以要來安裝官方文件有提到到 &lt;code&gt;Supervisor&lt;/code&gt; 這個服務。&lt;/p&gt;
&lt;p&gt;Supervisor 是個用 Python 寫的一個程序管理服務，支援自動重啟、執行多程序 &amp;hellip;etc。&lt;/p&gt;</description></item><item><title>Vue Router Lazy Loading</title><link>https://blog.puckwang.com/post/2019/vue_router_lazy_loading/</link><pubDate>Sun, 14 Apr 2019 12:23:35 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/vue_router_lazy_loading/</guid><description>&lt;p&gt;SPA 的網站會因為功能變多造成 build 出來的產物越來越大，雖然 Webpack 可以切 Chunk，但也會讓載入的時間變長，此時可以搭配 Vue 的
&lt;code&gt;Components Dynamic Async&lt;/code&gt; 的功能，讓 Component 只在使用到的時候才去載入，不會一次就全部載完。&lt;/p&gt;</description></item><item><title>.Net core 應用程式使用 Kestrel 部署並搭配 IIS 來反向 Proxy</title><link>https://blog.puckwang.com/post/2019/dot_net_core_kestrel_iis_reverse_proxy/</link><pubDate>Thu, 11 Apr 2019 20:00:48 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/dot_net_core_kestrel_iis_reverse_proxy/</guid><description>&lt;p&gt;Kestrel 是 .Net core 隨附的跨平台網頁伺服器，可以自己獨立運行，也可以搭配其他網頁伺服器的反向 Proxy。&lt;/p&gt;</description></item><item><title>利用 GPG 簽署 git commit</title><link>https://blog.puckwang.com/post/2019/sign_git_commit_with_gpg/</link><pubDate>Wed, 03 Apr 2019 16:04:42 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/sign_git_commit_with_gpg/</guid><description>&lt;p&gt;GPG 全名為 GNU Privacy Guard 也可以簡稱為 GnuPG，他是一個加密軟體，但也可以用來驗證身份。&lt;/p&gt;
&lt;p&gt;今天就要來將我們 git commit 加上 GPG 簽署，讓它 Push 到 Github 等代管平台後，別人可以確定這份 Commit 是你提交的。&lt;/p&gt;</description></item><item><title>改用 SQL Server 或其他 Database 來儲存 Bot State</title><link>https://blog.puckwang.com/post/2019/bot_framework_4_state_change_storage_db/</link><pubDate>Fri, 15 Mar 2019 23:52:21 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/bot_framework_4_state_change_storage_db/</guid><description>&lt;p&gt;Bot Framework 4 官方內建的 Storage 並沒有 SQL Server，
僅支援開發用的 &lt;code&gt;MemoryStorage&lt;/code&gt; 和 Azure 上的 &lt;code&gt;CosmosDb&lt;/code&gt; 與 &lt;code&gt;Blob&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;因工作上需要，於是就想辦法把寫一個支援 SQL Server 的 &lt;code&gt;Storage&lt;/code&gt;。&lt;/p&gt;</description></item><item><title>專案有使用 NHibernate 時，為 Table 加上 Trigger 出現錯誤</title><link>https://blog.puckwang.com/post/2019/nhibernate_trigger_actual_row_count_error/</link><pubDate>Fri, 15 Mar 2019 23:29:28 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/nhibernate_trigger_actual_row_count_error/</guid><description>&lt;p&gt;最近有踩到這個雷，當使用 NHibernate 去存取資料庫時，你在變更的 Table 加上 Trigger，
而這個 Trigger 有去異動到資料，&lt;/p&gt;
&lt;p&gt;那 NHibernate 的類似保護機制的東西就會噴這個錯誤:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Batch update returned unexpected row count from update; actual row count: 2; expected: 1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>.Net Core 安裝 Entity Framework Core 並使用 Migration 來建立 Table</title><link>https://blog.puckwang.com/post/2019/dot_net_core_ef_core_migration_table/</link><pubDate>Sun, 24 Feb 2019 08:52:55 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/dot_net_core_ef_core_migration_table/</guid><description>&lt;p&gt;EntityFramework 是一個實現 &lt;a href=&#34;https://zh.wikipedia.org/wiki/%E5%AF%B9%E8%B1%A1%E5%85%B3%E7%B3%BB%E6%98%A0%E5%B0%84&#34; target=&#34;_blank&#34;&gt;ORM&lt;/a&gt; 的一個工具，而 EntityFrameworkCore 則是它的輕量版，簡單來說就是可以在專案中寫好需要的 Model 後，再用它產生對應的 Table，不用再自己執行 SQL。&lt;/p&gt;</description></item><item><title>Deploy Bot Framework 4 to IIS</title><link>https://blog.puckwang.com/post/2019/deploy_bot_framework_4_to_iis/</link><pubDate>Wed, 13 Feb 2019 19:00:47 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/deploy_bot_framework_4_to_iis/</guid><description>&lt;p&gt;在使用 Bot Framework 開發時，一定會遇到要部署至 IIS 的狀況，但官方文件就只有寫部署到 Azure 的方法，
雖然部署 Bot Framework 4 的方法與部署 .Net Core 差不多，但沒注意到細節踩雷也會很煩。&lt;/p&gt;</description></item><item><title>Side Projects</title><link>https://blog.puckwang.com/projects/</link><pubDate>Sun, 10 Feb 2019 16:50:10 +0800</pubDate><guid>https://blog.puckwang.com/projects/</guid><description>這裡記錄了直到現在我所寫的 Side-Project，不管是有沒有繼續維護 :P
Loading the data just for you. GitHubCalendar(&#34;.calendar&#34;, &#34;puckwang&#34;);
NPM Package Vue-SlotMachine
一個用 HTML5 Canvas 寫的拉霸機，已經包成 Vue Component，安裝即可使用，支援自訂選項、RWD。
A Vue component of a slot machine, made with an HTML5 canvas, RWD.
Github: https://github.com/puckwang/vue-slot-machine NPM: https://www.npmjs.com/package/@puckwang/vue-slot-machine 技術: Vue、Canvas
QR-Code
用 HTML5 Canvas 寫的 QRCode 產生器，支援多種點得圖案。
Use HTML5 canvas draw QRCode
Github: https://github.</description></item><item><title>Bot Framework 4 入門筆記 for MacOS and Jetbrains Rider</title><link>https://blog.puckwang.com/post/2019/bot_framework_4_getting_started_for_rider/</link><pubDate>Tue, 29 Jan 2019 18:01:42 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/bot_framework_4_getting_started_for_rider/</guid><description>&lt;p&gt;Microsoft bot framework 4 在去年九月就發布了，直到最近我才有機會去學他，雖然有碰過 v3，但聽說架構改很大，
底層也改用 .Net Core 了，現在趕緊把它補上。&lt;/p&gt;
&lt;p&gt;雖然官方是推薦用 VS ，但身為一個 Jetbrains IDE 的愛好者，當然是使用它來當作開發工具，現在就讓我們從建立專案開始吧。&lt;/p&gt;</description></item><item><title>Microsoft Bot Framework 內建 Cards 種類</title><link>https://blog.puckwang.com/post/2019/bot_framework_cards_note/</link><pubDate>Mon, 07 Jan 2019 12:29:01 +0800</pubDate><guid>https://blog.puckwang.com/post/2019/bot_framework_cards_note/</guid><description>&lt;p&gt;在開發聊天機器人時，現今給使用者的資料呈現方式除了一般的字串形式外，另外一種較常出現的就是以卡片形式呈現，
運用卡片形式呈現不僅讓使用者更容易閱讀，也不會造成聊天頻道看起來很雜亂。&lt;/p&gt;
&lt;p&gt;Bot Framework 以內建許多卡片供開發者使用，不僅支援多個平台，也很容易使用。&lt;/p&gt;</description></item><item><title>Disclaimer</title><link>https://blog.puckwang.com/other/disclaimer/</link><pubDate>Fri, 28 Dec 2018 12:40:10 +0800</pubDate><guid>https://blog.puckwang.com/other/disclaimer/</guid><description>Last updated: 2018-12-28
The information contained on https://blog.puckwang.com/ website (the &amp;ldquo;Service&amp;rdquo;) is for general information purposes only.
Puck&amp;rsquo;s blog assumes no responsibility for errors or omissions in the contents on the Service.
In no event shall Puck&amp;rsquo;s blog be liable for any special, direct, indirect, consequential, or incidental damages or any damages whatsoever, whether in an action of contract, negligence or other tort, arising out of or in connection with the use of the Service or the contents of the Service.</description></item><item><title>Git 常用指令與設定筆記</title><link>https://blog.puckwang.com/post/2018/my_git_command_cheat_sheet/</link><pubDate>Mon, 24 Dec 2018 12:59:13 +0800</pubDate><guid>https://blog.puckwang.com/post/2018/my_git_command_cheat_sheet/</guid><description>&lt;p&gt;使用 Git 也有一段時間了，除了常用的 commit, push 等常用基本指令外，還有許多很實用的指令，在這邊做一下紀錄。&lt;/p&gt;</description></item><item><title>新增 Bootstrap 4 到用 vue-cli 3.x 建立的專案中</title><link>https://blog.puckwang.com/post/2018/add_bootstrap_4_to_vue_cli_3/</link><pubDate>Tue, 04 Dec 2018 22:31:10 +0800</pubDate><guid>https://blog.puckwang.com/post/2018/add_bootstrap_4_to_vue_cli_3/</guid><description>&lt;p&gt;在這邊紀錄一下怎麼將 Bootstrap 4 新增進 vue-cli 3.x 所建立的專案中。&lt;/p&gt;</description></item><item><title>CSS Animation 入門筆記</title><link>https://blog.puckwang.com/post/2018/css_animation_getting_started/</link><pubDate>Mon, 03 Dec 2018 12:00:00 +0800</pubDate><guid>https://blog.puckwang.com/post/2018/css_animation_getting_started/</guid><description>&lt;p&gt;利用 CSS 動畫，可不必使用 Javascript 或是 Git，就能讓 HTML 的元素有動畫的效果。&lt;/p&gt;
&lt;p&gt;這此是為了製作 Loading 的圖示，才會來研究 CSS 動畫。&lt;/p&gt;</description></item><item><title>解決 vuex 在 Laravel-mix 中使用展開運算子(...)出現語法錯誤的問題</title><link>https://blog.puckwang.com/post/2017/fix_laravel_mix_vuex_compilation_issue/</link><pubDate>Wed, 06 Sep 2017 01:09:04 +0800</pubDate><guid>https://blog.puckwang.com/post/2017/fix_laravel_mix_vuex_compilation_issue/</guid><description>&lt;p&gt;在你把vuex的Actions與getters注入到components中時，可能會使用到展開運算子(&amp;hellip;)，此時你可能會遇到語法錯誤的問題。&lt;/p&gt;</description></item><item><title>解決使用 Laravel-mix 時 Phpstorm 會 lag 的問題</title><link>https://blog.puckwang.com/post/2017/solve_laravel_mix_phpstorm_lag/</link><pubDate>Tue, 05 Sep 2017 22:21:26 +0800</pubDate><guid>https://blog.puckwang.com/post/2017/solve_laravel_mix_phpstorm_lag/</guid><description>&lt;p&gt;最近開始在用laravel 5.5開發專案時發現的問題，只要用執行&lt;code&gt;npm run watch&lt;/code&gt;後，
每次跑完編譯phpstorm都會停頓幾秒。&lt;/p&gt;</description></item><item><title>Console Colors Table</title><link>https://blog.puckwang.com/post/2017/ansi_escape_code_color/</link><pubDate>Sun, 03 Sep 2017 01:12:16 +0800</pubDate><guid>https://blog.puckwang.com/post/2017/ansi_escape_code_color/</guid><description>&lt;p&gt;藉由&lt;code&gt;ANSI escape code&lt;/code&gt;可以更改Console上字的顏色、背景顏色、粗體、下畫線等..&lt;/p&gt;</description></item><item><title>About</title><link>https://blog.puckwang.com/about/</link><pubDate>Fri, 01 Sep 2017 22:31:10 +0800</pubDate><guid>https://blog.puckwang.com/about/</guid><description>這裡是一個筆記型的部落格，內容由 Puck Wang 撰寫 ，主題較常為程式類筆記、問題紀錄、套件介紹等，而有時也會出現活動紀錄、攝影、遊記等文章，歡迎訂閱關注。 相關資訊 使用系統: Hugo 使用樣式: silhouette-hugo 免責申明: Disclaimer Link About Author Puck Wang 全端網站開發者 / Full Stack Web Developer * 我來自台灣，是一位全端網站開發者。我擅長於 Web 領域，較常使用 PHP、.Net Core、Vue 與 React。而目前最喜歡的框架是 Laravel。
我喜歡學習新事物與新技術的開發者，對於 Code 品質有一定程度的要求，會花費很多時間在使一份 Code 更好。另外也喜歡寫 Side Project，常常早上上班 Coding，晚上回來繼續 Coding。
I&amp;rsquo;m a full stack web developer, from Taiwan. I focus on web application, often using PHP, .NET Core, Vue and React.</description></item><item><title>My First Post</title><link>https://blog.puckwang.com/post/2017/my-first-post/</link><pubDate>Fri, 01 Sep 2017 18:13:29 +0800</pubDate><guid>https://blog.puckwang.com/post/2017/my-first-post/</guid><description>&lt;p&gt;我在Ｈexo與Hugo這兩個平台抉擇了很久·在比較兩平台的人氣後最終選擇了Hugo。&lt;/p&gt;</description></item></channel></rss>